name: Test latest OSs

on: [push, pull_request]

jobs:
  test-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install xcbeautify
      uses: Cyberbeni/install-swift-tool@v2
      with:
        url: https://github.com/thii/xcbeautify
        version: '*'
    - name: Test
      shell: bash
      run: |
        set -o pipefail
        swift test --enable-test-discovery --enable-code-coverage | xcbeautify
    - name: Codecov
      shell: bash
      run: |
        /usr/share/swift/usr/bin/llvm-cov export -format="lcov" .build/debug/TypedNotificationCenterPackageTests.xctest -instr-profile .build/debug/codecov/default.profdata > info.lcov
        bash <(curl -s https://codecov.io/bash) -J '^TypedNotificationCenter$' -n 'Linux' -F 'Linux'
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      
  test-darwin-unit:
    strategy:
      matrix:
        os: [macOS, iOS, tvOS]
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Test
      run: fastlane scan --scheme "TypedNotificationCenter ${{ matrix.os }}" --disable_slide_to_type false
    - name: Codecov
      run: bash <(curl -s https://codecov.io/bash) -J '^TypedNotificationCenter$' -n '${{ matrix.os }}' -F '${{ matrix.os }}'
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      
  test-darwin-ui:
    strategy:
      matrix:
        os: [iOS]
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Test
      run: fastlane scan --scheme "TNC UI Test Host ${{ matrix.os }}"
    - name: Codecov
      run: bash <(curl -s https://codecov.io/bash) -J '^TypedNotificationCenter$' -n '${{ matrix.os }}-ui' -F '${{ matrix.os }}'
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
